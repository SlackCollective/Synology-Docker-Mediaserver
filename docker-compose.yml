version: "3.7"
########################### NETWORKS
networks:
  t2_proxy:
    name: t2_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24
  default:
    driver: bridge

########################### SERVICES
services:
  ############################# SYSTEM CONTAINERS
  # Traefik 2 - Reverse Proxy
  # Touch (create empty files) traefik.log and acme/acme.json. Set acme.json permissions to 600.
  # touch $DOCKERDIR/traefik2/acme/acme.json
  # chmod 600 $DOCKERDIR/traefik2/acme/acme.json
  # touch $DOCKERDIR/traefik2/traefik.log
  traefik:
    container_name: traefik
    image: traefik:livarot # the livarot tag refers to v2.4.x
    depends_on: #delays container start until all are running
      - oauth
      - organizr
      - sonarr
      - radarr
      - sabnzbd
      - deluge
      - hydra
      - jackett
      - calibre-web
      - tdarr
      - tdarr_node
      - bazarr
      - dozzle
      - watchtower
      - certdumper
    restart: unless-stopped
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22,172.18.0.1/24,192.168.1.1/24,172.18.0.1/24
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.dashboard=true
      # - --pilot.token=5a60880b-5c40-4262-b904-772e04b4fa95
      # - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedByDefault=false
      - --entrypoints.https.http.tls.domains[0].main=${DOMAINNAME}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAINNAME}
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      # - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      # - --providers.file.filename=/path/to/file # Load dynamic configuration from a file
      # - --providers.file.watch=true # Only works on top level files in the rules folder
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
    networks:
      t2_proxy:
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 89 # 80 fwd to 89 in router to get around Synology control of 80
        protocol: tcp
        mode: host
      - target: 443 
        published: 449 #443 fwd to 449 in router to get around Synology control of 80
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/traefik2/acme/acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - ${USERDIR}/traefik2/traefik.log:/traefik.log # for fail2ban - make sure to touch file before starting the container
      - ${USERDIR}/traefik2:/etc/traefik
      # - ${USERDIR}/traefik2/rules:/rules # file provider directory
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
      - CF_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAINNAME}`)"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=googleauth"  
      ## Middlewares security headers for services
      - "traefik.http.middlewares.securityheaders.headers.accessControlAllowMethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.securityheaders.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.securityheaders.headers.hostsProxyHeaders=X-Forwarded-Host"
      - "traefik.http.middlewares.securityheaders.headers.sslRedirect=true"
      - "traefik.http.middlewares.securityheaders.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.securityheaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.securityheaders.headers.stsPreload=true"
      - "traefik.http.middlewares.securityheaders.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.securityheaders.headers.customFrameOptionsValue=allow-from https:domain.com" #CSP takes care of this but may be needed for organizr
      - "traefik.http.middlewares.securityheaders.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.securityheaders.headers.browserXssFilter=true"
      - "traefik.http.middlewares.securityheaders.headers.referrerPolicy=same-origin"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  # Google OAuth - Single Sign On using OAuth 2.0
  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    command: ./traefik-forward-auth --rule.api.action=allow --rule.api.rule="PathPrefix(`/api`)"
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=${GOOGLE_CLIENT_ID}
      - CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET=${OAUTH_SECRET}
      - COOKIE_DOMAIN=${DOMAINNAME}
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.${DOMAINNAME}
      - URL_PATH=/_oauth
      - WHITELIST=email@email.com #add comma-separated addresses for GAuth
      - LOG_LEVEL=warn
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth-rtr.entrypoints=https"
      - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.${DOMAINNAME}`)"
      ## HTTP Services
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
      ## Middlewares_auth
      - "traefik.http.routers.oauth-rtr.middlewares=googleauth"
      - "traefik.http.middlewares.googleauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.googleauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.googleauth.forwardauth.trustForwardHeader=true"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# FRONTENDS
  # Organizr - Unified Frontend
  organizr:
    container_name: organizr
    image: organizr/organizr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/organizr:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - fpm=true #true or false | using true will provide better performance
      - branch=v2-master #v2-master or #v2-develop
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.organizr-rtr.entrypoints=https"
      - "traefik.http.routers.organizr-rtr.rule=Host(`organizr.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.organizr-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.organizr-rtr.service=organizr-svc"
      - "traefik.http.services.organizr-svc.loadbalancer.server.port=80"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# PVRS
  # Sonarr - TV Shows management
  # Set url_base in sonarr settings if using PathPrefix
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${USERDIR}/sonarr:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/media/TV:/tv
      - /etc/localtime:/etc/localtime:ro
      - ${DATADIR}:/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-auth-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-auth-bypass.rule=Headers(`X-Api-Key`, `${SONARR_API_KEY}`) || Query(`apikey`, `${SONARR_API_KEY}`)"
      - "traefik.http.routers.sonarr-auth-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.${DOMAINNAME}`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## TLS and middlewares
      - "traefik.http.routers.sonarr-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.sonarr-auth-bypass.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  # Radarr - Movie management
  # Set url_base in radarr settings if using PathPrefix
  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${USERDIR}/radarr:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/media/Movies:/movies
      - /etc/localtime:/etc/localtime:ro
      - ${DATADIR}:/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-auth-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-auth-bypass.rule=Headers(`X-Api-Key`, `${RADARR_API_KEY}`) || Query(`apikey`, `${RADARR_API_KEY}`)"
      - "traefik.http.routers.radarr-auth-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.${DOMAINNAME}`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      ## TLS and middlewares
      - "traefik.http.routers.radarr-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.radarr-auth-bypass.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# DOWNLOADERS
  # SABnzbd - Binary newsgrabber (NZB downloader)
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/sabnzbd:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/downloads/incomplete:/incomplete-downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sabnzbd-auth-bypass.entrypoints=https"
      - "traefik.http.routers.sabnzbd-auth-bypass.rule=Query(`apikey`, `${SABNZBD_API_KEY}`)"
      - "traefik.http.routers.sabnzbd-auth-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=https"
      - "traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.${DOMAINNAME}`)"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      ## TLS and middlewares
      - "traefik.http.routers.sabnzbd-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.sabnzbd-auth-bypass.service=sabnzbd-svc"
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

# Deluge - Bittorrent Downloader with VPN
  deluge:
    image: binhex/arch-delugevpn
    container_name: deluge
    restart: unless-stopped
    networks:
      - t2_proxy
    dns:
      - 8.8.8.8
      - 8.8.4.4
    logging:
      driver: json-file
      options:
        max-size: "100k"
        max-file: "5"
    ports:
      - 8112:8112
      - 8118:8118
      - 58846:58846
      - 58946:58946
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - ${USERDIR}/deluge:/config
      - ${DATADIR}/downloads:/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASSWORD}
      - VPN_PROV=custom
#      - VPN_OPTIONS=<additional openvpn cli options>
      - STRICT_PORT_FORWARD=no
      - DEBUG=false
#      - ADDITIONAL_PORTS=<port number(s)>
      - UMASK=000
      - DELUGE_DAEMON_LOG_LEVEL=error
      - DELUGE_WEB_LOG_LEVEL=error
      - DELUGE_LOGLEVEL=error #optional
      - ENABLE_PRIVOXY=yes
      - LAN_NETWORK=192.168.0.0/16
      - NAME_SERVERS=8.8.8.8
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.deluge-rtr.entrypoints=https"
      - "traefik.http.routers.deluge-rtr.rule=Host(`deluge.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.deluge-rtr.middlewares=securityheaders"
      ## Service
      - "traefik.http.routers.deluge-rtr.service=deluge-svc"
      - "traefik.http.services.deluge-svc.loadbalancer.server.port=8112"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# INDEXERS
  # NZBHydra2 - NZB meta search
  hydra:
    image: linuxserver/nzbhydra2:latest
    container_name: hydra
    restart: unless-stopped
    networks:
      - t2_proxy
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/hydra2:/config
      - ${DATADIR}/downloads/blackhole:/data/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.hydra-auth-bypass.entrypoints=https"
      - "traefik.http.routers.hydra-auth-bypass.rule=Query(`apikey`, `${HYDRA_API_KEY}`)"
      - "traefik.http.routers.hydra-auth-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.hydra-rtr.entrypoints=https"
      - "traefik.http.routers.hydra-rtr.rule=Host(`hydra.${DOMAINNAME}`)"
      - "traefik.http.routers.hydra-rtr.priority=99"
      ## TLS and middlewares
      - "traefik.http.routers.hydra-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.hydra-auth-bypass.service=hydra-svc"
      - "traefik.http.routers.hydra-rtr.service=hydra-svc"
      - "traefik.http.services.hydra-svc.loadbalancer.server.port=5076"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  # Jackett - Torrent proxy
  # Set url_base in Jackett settings if using PathPrefix
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/jackett:/config
      - ${DATADIR}/downloads/blackhole:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jackett-rtr.entrypoints=https"
      - "traefik.http.routers.jackett-rtr.rule=Host(`jackett.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.jackett-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.jackett-rtr.service=jackett-svc"
      - "traefik.http.services.jackett-svc.loadbalancer.server.port=9117"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# BOOKS
  # Calibre-web  – Ebooks and Management
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/calibre:/config
      - ${DATADIR}/media/Books:/books
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - DOCKER_MODS=linuxserver/calibre-web:calibre
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
      - OAUTHLIB_INSECURE_TRANSPORT=1
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.calibre-rtr.entrypoints=https"
      - "traefik.http.routers.calibre-rtr.rule=Host(`calibre.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.calibre-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.calibre-rtr.service=calibre-svc"
      - "traefik.http.services.calibre-svc.loadbalancer.server.port=8083"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# MEDIA FILE MANAGEMENT
# Video conversion - tdarr
  tdarr:
    image: haveagitgat/tdarr:latest
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    container_name: tdarr
    restart: unless-stopped
    networks:
      - t2_proxy
    ports:
      - "${TDARR_PORT}:8265"
      - "${TDARR_SERVER}:8266"
    volumes:
      - ${USERDIR}:/app/server
      - ${DATADIR}/media/TV:/home/Tdarr/Media/TV
      - ${DATADIR}/media/Movies:/home/Tdarr/Media/Movies
      - ${DATADIR}/media/temp:/temp
    environment:
      - TZ=${TZ}
      - serverIP=xxx.xxx.xxx.xxx #LAN IP of Synology
      - webUIPort=8265
      - serverPort=8266
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=t2_proxy"
      ## HTTP Routers
      - "traefik.http.routers.tdarr-rtr.entrypoints=https"
      - "traefik.http.routers.tdarr-rtr.rule=Host(`tdarr.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.tdarr-rtr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.routers.tdarr-rtr.service=tdarr-svc"
      - "traefik.http.services.tdarr-svc.loadbalancer.server.port=8265"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  tdarr_node:
    image: haveagitgat/tdarr_node:latest
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    container_name: tdarr_node
    restart: unless-stopped
    networks:
      - t2_proxy
    ports:
      - "${TDARR_NODE}:8267"
    volumes:
      - ${DATADIR}/media/TV:/home/Tdarr/Media/TV
      - ${DATADIR}/media/Movies:/home/Tdarr/Media/Movies
      - ${DATADIR}/media/temp:/temp
    environment:
      - nodeID=BrunswickTdarrNode
      - nodeIP=xxx.xxx.xxx.xxx #LAN IP of Synology
      - nodePort=8267
      - serverIP=xxx.xxx.xxx.xxx #LAN IP of Synology
      - serverPort=8266
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tdarrnode-rtr.entrypoints=https"
      ## TLS and middlewares
      ## Service
      - "traefik.http.routers.tdarrnode-rtr.service=tdarrnode-svc"
      - "traefik.http.services.tdarrnode-svc.loadbalancer.server.port=8267"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

# Subtitle searching and downloading, based on release filename
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/bazarr:/config
      - ${DATADIR}/media/Movies:/movies
      - ${DATADIR}/media/TV:/tv
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.bazarr-auth-bypass.entrypoints=https"
      - "traefik.http.routers.bazarr-auth-bypass.rule=Host(`bazarr.${DOMAINNAME}`) && (Headers(`X-Api-Key`, `${BAZARR_API_KEY}`) || Query(`apikey`, `${BAZARR_API_KEY}`))"
      - "traefik.http.routers.bazarr-auth-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.${DOMAINNAME}`)"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      ## TLS and middlewares
      - "traefik.http.routers.bazarr-rtr.middlewares=securityheaders,googleauth"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.routers.bazarr-auth-bypass.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# MAINTENANCE
  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=securityheaders,googleauth"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  # Traefik Certs Dumper - Extract LetsEncrypt Certificates - Traefik2 Compatible
  certdumper:
    container_name: certdumper
    image: humenius/traefik-certs-dumper:latest
    network_mode: none
    security_opt:
      - no-new-privileges:true
    # command: --restart-containers container1,container2,container3
    volumes:
      - ${USERDIR}/traefik2/acme:/traefik:ro
      - ${USERDIR}/shared/certs:/output:rw
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Only needed if restarting containers
    environment:
      DOMAIN: ${DOMAINNAME}

  # Watchtower - Automatic Update of Containers/Apps
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    networks:
      - t2_proxy
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    command: --schedule "0 0 6 * * *" --label-enable --cleanup --include-restarting
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
