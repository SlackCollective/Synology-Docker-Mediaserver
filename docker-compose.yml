version: "3.7"

########################### NETWORKS
networks:
  t2_proxy:
    external:
      name: t2_proxy
  default:
    driver: bridge

########################### SERVICES
services:
# All services / apps go below this line
  # Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
#    image: traefik:chevrotin # the chevrotin tag refers to v2.2.x
    image: traefik:picodon # the chevrotin tag refers to v2.3.x
    restart: unless-stopped
    command: # CLI arguments
#      - --pilot.token=053b76a6-f9b4-4a28-93f0-b80feedbd30c
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.insecure=true
      # - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      # - --providers.docker.defaultrule=HostHeader(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      # Add dns-cloudflare as default certresolver for all services. Also enables TLS and no need to specify on individual services.
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=${DOMAINNAME}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAINNAME}
      # - --entrypoints.https.http.tls.domains[1].main=$DOMAIN # Pulls main cert for second domain
      # - --entrypoints.https.http.tls.domains[1].sans=*.$DOMAIN # Pulls wildcard cert for second domain
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
    networks:
     t2_proxy:
#        ipv4_address: xxx.xxx.xxx.xxx # You can specify a static IP
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 89
        protocol: tcp
        mode: host
      - target: 443
        published: 449
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/traefik2/acme/acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - ${USERDIR}/traefik2/traefik.log:/traefik.log # for fail2ban - make sure to touch file before starting the container
      - ${USERDIR}/traefik2:/etc/traefik
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
      - CF_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}
      - TZ=${TZ}
    depends_on:
      - oauth
      - watchtower
      - portainer
      - organizr
      - sonarr
      - radarr
      - delugevpn
      - sabnzbd
      - bazarr
      - calibre-web
      - jackett
      - tdarr
      - tdarr_node
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=HostHeader(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.middlewares=googleauth"
      - "traefik.http.routers.traefik.service=api@internal"
      ## Middlewares security headers
      - "traefik.http.middlewares.securityheaders.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.securityheaders.headers.stsPreload=true"
      - "traefik.http.middlewares.securityheaders.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.securityheaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.securityheaders.headers.accessControlAllowMethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.securityheaders.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.securityheaders.headers.hostsProxyHeaders=X-Forwarded-Host"
      - "traefik.http.middlewares.securityheaders.headers.sslRedirect=true"
      - "traefik.http.middlewares.securityheaders.headers.customFrameOptionsValue=allow-from https:brunswickmedia.co.za" #CSP takes care of this but may be needed for organizr
      - "traefik.http.middlewares.securityheaders.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.securityheaders.headers.browserXssFilter=true"
      - "traefik.http.middlewares.securityheaders.headers.referrerPolicy=same-origin"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
            
  ############################# SECURITY/SSO
# Google OAuth - Single Sign On using OAuth 2.0
  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    command: ./traefik-forward-auth --rule.api.action=allow --rule.api.rule="PathPrefix(`/api`)"
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=${GOOGLE_CLIENT_ID}
      - CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET=${OAUTH_SECRET}
      - COOKIE_DOMAIN=${DOMAINNAME}
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.${DOMAINNAME}
      - URL_PATH=/_oauth
      - WHITELIST=me@me.com # comma-separated emails of users permitted to authenticate
      - LOG_LEVEL=error
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth-rtr.entrypoints=https"
      - "traefik.http.routers.oauth-rtr.rule=HostHeader(`oauth.${DOMAINNAME}`)"
      ## HTTP Services
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
      ## Middlewares_auth
      - "traefik.http.routers.oauth-rtr.middlewares=googleauth"
      - "traefik.http.middlewares.googleauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.googleauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.googleauth.forwardauth.trustForwardHeader=true"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# FRONTENDS
  # Organizr - Unified Frontend
  organizr:
    container_name: organizr
    image: organizr/organizr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/organizr:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - fpm=true #true or false | using true will provide better performance
      - branch=v2-master #v2-master or #v2-develop
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.organizr.entrypoints=https"
      - "traefik.http.routers.organizr.rule=HostHeader(`organizr.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.organizr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# DOWNLOADERS
  # SABnzbd - Binary newsgrabber (NZB downloader)
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${USERDIR}/sabnzbd:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/downloads/incomplete:/incomplete-downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sabnzbd-auth-bypass.entrypoints=https"
      - "traefik.http.routers.sabnzbd-auth-bypass.rule=Query(`apikey`, `${SABNZBD_API_KEY}`)"
      - "traefik.http.routers.sabnzbd-auth-bypass.priority=100"
      - "traefik.http.routers.sabnzbd-auth-bypass.service=sabnzbd"
      ## HTTP Routers
      - "traefik.http.routers.sabnzbd.entrypoints=https"
      - "traefik.http.routers.sabnzbd.rule=HostHeader(`sabnzbd.${DOMAINNAME}`)"
      - "traefik.http.routers.sabnzbd.priority=99"
      - "traefik.http.routers.sabnzbd.service=sabnzbd"
      ## TLS and middlewares
      - "traefik.http.routers.sabnzbd.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      
# Deluge with VPN â€“ Bittorrent Downloader
  delugevpn:
    image: binhex/arch-delugevpn
    cap_add:
      - NET_ADMIN
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    container_name: delugevpn
    restart: unless-stopped
    networks:
      - t2_proxy
    ports:
      - "${DELUGE_PORT}:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"
    volumes:
      - ${USERDIR}/delugevpn:/config
      - ${USERDIR}/delugevpn/data:/data  
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/downloads/blackhole:/torrenthole
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASSWORD}
      - VPN_PROV=custom
#      - VPN_OPTIONS=<additional openvpn cli options>
      - STRICT_PORT_FORWARD=no
      - TZ=${TZ}
      - DEBUG=false
#      - ADDITIONAL_PORTS=<port number(s)>
      - UMASK_SET=000
      - DELUGE_DAEMON_LOG_LEVEL=error
      - DELUGE_WEB_LOG_LEVEL=error
      - ENABLE_PRIVOXY=yes
      - LAN_NETWORK=0.0.0.0
      - NAME_SERVERS=1.1.1.1
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.delugevpn.entrypoints=https"
      - "traefik.http.routers.delugevpn.rule=HostHeader(`delugevpn.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.delugevpn.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.delugevpn.loadbalancer.server.port=8112"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
           
  ############################# INDEXERS
  # Jackett - Torrent proxy
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "${JACKETT_PORT}:9117"
    volumes:
      - ${USERDIR}/jackett:/config
      - ${DATADIR}/downloads/blackhole:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jackett.entrypoints=https"
      - "traefik.http.routers.jackett.rule=HostHeader(`jackett.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.jackett.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# PVRS
  # Radarr - Movie management
  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "${RADARR_PORT}:7878"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${USERDIR}/radarr:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/media/Movies:/movies
      - /etc/localtime:/etc/localtime:ro
      - ${DATADIR}:/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-auth-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-auth-bypass.rule=Headers(`X-Api-Key`, `${RADARR_API_KEY}`) || Query(`apikey`, `${RADARR_API_KEY}`)"
      - "traefik.http.routers.radarr-auth-bypass.priority=100"
      - "traefik.http.routers.radarr-auth-bypass.service=radarr"
      ## HTTP Routers
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.rule=HostHeader(`radarr.${DOMAINNAME}`)"
      - "traefik.http.routers.radarr.priority=99"
      - "traefik.http.routers.radarr.service=radarr"
      ## TLS and middlewares
      - "traefik.http.routers.radarr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      
  # Sonarr - TV Shows management
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "${SONARR_PORT}:8989"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${USERDIR}/sonarr:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/media/TV:/tv
      - /etc/localtime:/etc/localtime:ro
      - ${DATADIR}:/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-auth-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-auth-bypass.rule=Headers(`X-Api-Key`, `${SONARR_API_KEY}`) || Query(`apikey`, `${SONARR_API_KEY}`)"
      - "traefik.http.routers.sonarr-auth-bypass.priority=100"
      - "traefik.http.routers.sonarr-auth-bypass.service=sonarr"
      ## HTTP Routers
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.rule=HostHeader(`sonarr.${DOMAINNAME}`)"
      - "traefik.http.routers.sonarr.priority=99"
      - "traefik.http.routers.sonarr.service=sonarr"
      ## TLS and middlewares
      - "traefik.http.routers.sonarr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      
  ############################# BOOKS
  # Calibre-web  â€“ Ebooks and Management
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
     - "${CALIBRE_PORT}:8083"
    volumes:
      - ${USERDIR}/calibre:/config
      - ${DATADIR}/media/Books:/books
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - DOCKER_MODS=linuxserver/calibre-web:calibre
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
      - OAUTHLIB_INSECURE_TRANSPORT=1
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.calibre.entrypoints=https"
      - "traefik.http.routers.calibre.rule=HostHeader(`calibre.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.calibre.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.calibre.loadbalancer.server.port=8083"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
            
  ############################# MEDIA FILE MANAGEMENT
# Video conversion - tdarr
  tdarr:
    image: haveagitgat/tdarr:latest
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    container_name: tdarr
    restart: unless-stopped
    networks:
      - t2_proxy
    ports:
      - "${TDARR_PORT}:8265"
      - "${TDARR_SERVER}:8266"
    volumes:
      - ${USERDIR}/tdarr:/app/server
      - ${DATADIR}/media/TV:/home/Tdarr/Media/TV
      - ${DATADIR}/media/Movies:/home/Tdarr/Media/Movies
      - ${DATADIR}/media/temp:/temp
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - serverIP=x.x.x.x #edit as necessary
      - webUIPort=8265
      - serverPort=8266
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=t2_proxy"
      ## HTTP Routers
      - "traefik.http.routers.tdarr.entrypoints=https"
      - "traefik.http.routers.tdarr.rule=HostHeader(`tdarr.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.tdarr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.tdarr.loadbalancer.server.port=8265"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  tdarr_node:
    image: haveagitgat/tdarr_node:latest
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    container_name: tdarr_node
    restart: unless-stopped
    networks:
      - t2_proxy
    ports:
      - "${TDARR_NODE}:8267"
    volumes:
      - ${DATADIR}/media/TV:/home/Tdarr/Media/TV
      - ${DATADIR}/media/Movies:/home/Tdarr/Media/Movies
      - ${DATADIR}/media/temp:/temp
    environment:
      - nodeID=MyTdarrNode
      - nodeIP=x.x.x.x #edit as necessary
      - nodePort=8267
      - serverIP=x.x.x.x #edit as necessary
      - serverPort=8266
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tdarrnode.entrypoints=https"
      ## TLS and middlewares
      ## Service
      - "traefik.http.services.tdarrnode.loadbalancer.server.port=8267"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      
  # Bazarr - Subtitle Management
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "${BAZARR_PORT}:6767"
    volumes:
      - ${USERDIR}/bazarr:/config
      - ${DATADIR}/media/Movies:/movies
      - ${DATADIR}/media/TV:/tv
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.bazarr.entrypoints=https"
      - "traefik.http.routers.bazarr.rule=HostHeader(`bazarr.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.bazarr.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  ############################# MAINTENANCE
  # Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ${USERDIR}/portainer:/data
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.routers.portainer.rule=HostHeader(`portainer.${DOMAINNAME}`)"
      ## TLS and middlewares
      - "traefik.http.routers.portainer.middlewares=securityheaders,googleauth"
      ## Service
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      ## Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  # Watchtower - Automatic Update of Containers/Apps
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    networks:
      - t2_proxy
    logging:
      options:
        max-size: "200k"
        max-file: "10"
    command: --schedule "0 0 6 * * *" --label-enable --cleanup --include-restarting
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
