########################### NETWORKS
networks:
  lsio:
    name: lsio
    driver: bridge
    enable_ipv6: false
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.5.254
          ip_range: 172.28.5.0/24

########################### SERVICES
services:
  ############################# WEBSERVER
  # Swag - webserver, reverse proxy
  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 449:443
      - 89:80 # port 80 needed for https redirection
      - 81:81 # Swag dashboard LAN access
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${DOMAINNAME}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - CERTPROVIDER=zerossl
      - STAGING=false
      - EMAIL=${CLOUDFLARE_EMAIL}
      - DOCKER_MODS=linuxserver/mods:swag-cloudflare-real-ip|linuxserver/mods:swag-maxmind|linuxserver/mods:swag-dashboard
      - MAXMINDDB_LICENSE_KEY=${MAXMINDDB_LICENSE_KEY}
    volumes:
      - ${APPDIR}/swag:/config
      - ${APPDIR}/swag/fail2ban/fail2ban.sqlite3:/dashboard/fail2ban.sqlite3:ro
      - ${APPDIR}/swag/log/nginx:/dashboard/logs:ro
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# CLOUDFLARE DDNS AND SSL      
  # Cloudflare DDNS - Dynamic DNS Updater
  cf-ddns:
    image: oznu/cloudflare-ddns
    container_name: cloudflare-ddns
    restart: unless-stopped
    networks:
      lsio:
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - API_KEY=${CF_API_KEY}
      - ZONE=${DOMAINNAME}
      - PROXIED=false
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1
      - CRON="@daily"
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# VPN
  # Gluetun - provider-agnostic VPN client
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    security_opt:
      - no-new-privileges:true
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: always
    networks:
      lsio:
    ports:
      - 20144:8000 # Gluetun Control server    
      - 9997:9997 # qBittorrent WebUI
      - 49777:49777 # qBittorrent seeding port
      - 49777:49777/udp # qBittorrent seeding port
      # - 8888:8888/tcp # HTTP proxy
      # - 8388:8388/tcp # Shadows
      # - 8388:8388/udp # Shadowsocks
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_INTERFACE=tun0
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      # - FIREWALL_OUTBOUND_SUBNETS=172.16.0.0/12,192.168.1.0/24,10.101.26.198/32 #only needed for proxy
      # - FIREWALL_VPN_INPUT_PORTS=253 #uncomment/edit if your provider offers port fwd
      - HEALTH_TARGET_ADDRESS=cloudflare.com:443
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - HEALTH_VPN_DURATION_INITIAL=6s
      - HEALTH_VPN_DURATION_ADDITION=5s
      - HEALTH_SUCCESS_WAIT_DURATION=5s
      - HTTPPROXY=off #change to on if you wish to enable
      - SHADOWSOCKS=off #change to on if you wish to enable
    volumes:
      - ${APPDIR}/gluetun:/gluetun
      - ${APPDIR}/gluetun/wireguard/wg0.conf:/gluetun/wireguard/wg0.conf
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# FRONTENDS    
  # Organizr - Unified Frontend
  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 88:80
    environment:
      - fpm="true"
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDIR}/organizr:/config
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# INDEXERS
  # Prowlarr - Hydra and Jackett combined
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 9696:9696
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
    volumes:
      - ${APPDIR}/prowlarr:/config:rw
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# DOWNLOADERS
  # SABnzbd - nzb downloader
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 0.0.0.0:9998:8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - HAS_IPV6=false
    volumes:
      - ${APPDIR}/sabnzbd:/config
      - ${DATADIR}/usenet:/data/usenet:rw
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # qbittorrent - torrent downloader with VPN
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - WEBUI_PORT=9997
    volumes:
      - ${APPDIR}/qbittorrent:/config:rw
      - ${DATADIR}/torrents:/data/torrents:rw
      - ${APPDIR}/qbittorrent/mam/cookies.sh:/etc/cont-init.d/99-mam-cookies
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}
      - deunhealth.restart.on.unhealthy=true

  # qbit_manage - torrent client management
  qbit_manage:
    image: bobokun/qbit_manage
    container_name: qbitmanage
    depends_on:
      qbittorrent:
        condition: service_started
    restart: unless-stopped
    networks:
      lsio:
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${APPDIR}/qbitmanage:/config:rw
      - ${APPDIR}/qbittorrent/:/qbittorrent/:ro
      - ${DATADIR}/torrents:/data/torrents:rw # same as qbittorrent download dir
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}
    
  # autobrr - torrent RSS downloader
  autobrr:
    image: ghcr.io/autobrr/autobrr:latest
    container_name: autobrr
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 7474:7474
    user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
      - AUTOBRR_PORT=7474
      - AUTOBRR_HOST=0.0.0.0
    volumes:
      - ${APPDIR}/autobrr:/config
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # omegabrr - auto-generate filters for autobrr based on *arr subscriptions
  omegabrr:
    image: ghcr.io/autobrr/omegabrr:latest
    container_name: omegabrr
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 7441:7441
    user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
    volumes:
      - ${APPDIR}/omegabrr:/config
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# MEDIA SEARCH/INDEX
  # Radarr - Movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      sabnzbd:
        condition: service_started
      qbittorrent:
        condition: service_started
      prowlarr:
        condition: service_started     
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${APPDIR}/radarr:/config
      - ${DATADIR}:/data
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Sonarr - TV
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      sabnzbd:
        condition: service_started
      qbittorrent:
        condition: service_started
      prowlarr:
        condition: service_started 
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${APPDIR}/sonarr:/config
      - ${DATADIR}:/data
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Tdarr - Video conversion
  tdarr:
    image: haveagitgat/tdarr:latest
    container_name: tdarr
    privileged: true
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 8265:8265
      - 8266:8266
    devices: # optional (used if Syno has Intel CPU, for HW transcoding)
      - /dev/dri:/dev/dri
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=TdarrNode
      - THREADS_WORKER_INIT_TIMEOUT=200000
    volumes:
      - ${APPDIR}:/app/server
      - ${APPDIR}/Tdarr/Configs:/app/configs
      - ${APPDIR}/Tdarr/Logs:/app/logs
      - ${DATADIR}/media/Transcode:/temp
      - ${DATADIR}:/data
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# HOME THEATRE
  # Plex - Media Player
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    network_mode: "host"
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - VERSION=docker
    volumes:
      - ${APPDIR}/plex:/config:rw
      - ${DATADIR}/media:/data/media:rw
      - ${DATADIR}/media:/transcode
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# PLEX MONITORING/MANAGEMENT
  # Tautulli - Media play and user monitoring
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    depends_on:
      plex:
        condition: service_started
    networks:
      lsio:
    ports:
      - 8182:8181
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
      - DEBUG=no
    volumes:
      - ${APPDIR}/tautulli:/config:rw
      - ${APPDIR}/plex:/plex:ro
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Overseer - Allows Plex users to request media
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    depends_on:
      - plex
    networks:
      lsio:
    ports:
      - 5055:5055
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${APPDIR}/overseerr:/config
      - ${DATADIR}/media:/data/media
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# INTERNET VIDEO DOWNLOADER
  # Metube – Self-hosted YT downloader with GUI
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 8084:8081
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - DELETE_FILE_ON_TRASHCAN=true
      - OUTPUT_TEMPLATE=%(playlist_title&Playlist |)S%(playlist_title|)S%(playlist_uploader& by |)S%(playlist_uploader|)S%(playlist_autonumber& - |)S%(playlist_autonumber|)S%(playlist_count& of |)S%(playlist_count|)S%(playlist_autonumber& - |)S%(uploader,creator|UNKNOWN_AUTHOR)S - %(title|UNKNOWN_TITLE)S - %(release_date>%Y-%m-%d,upload_date>%Y-%m-%d|UNKNOWN_DATE)S.%(ext)s
    volumes:
      - ${DATADIR}/media/youtube:/downloads
      - ${DATADIR}/media/youtube/cookies:/cookies
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# BOOK LIBRARY MANAGEMENT
  # Readarr - Books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    depends_on:
      sabnzbd:
        condition: service_started
      qbittorrent:
        condition: service_started
      prowlarr:
        condition: service_started 
    networks:
      lsio:
    ports:
      - 8787:8787
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${APPDIR}/readarr:/config
      - ${DATADIR}:/data
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Calibre – Content server
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 8082:8082 #Calibre desktop gui
      - 8181:8181 #Calibre desktop gui HTTPS
      - 8085:8081 #Calibre content server gui
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - CUSTOM_PORT=8082
      - CUSTOM_HTTPS_PORT=8181
      - TITLE=BrunswickBooks
      - CLI_ARGS="--trusted-ips 192.168.1.0/24"
      - CALIBRE_CACHE_DIRECTORY=/cache
    volumes:
      - ${APPDIR}/calibre:/config
      - ${DATADIR}:/data
      - ${APPDIR}/calibre/cache:/cache
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# SYSTEM MANAGEMENT/MONITORING
  # DeUnhealth - Restart unhealthy containers, e.g. containers depending on VPN
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      lsio:
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - LOG_LEVEL=error
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 9999:8080
    environment:
      - DOZZLE_BASE=/
      - DOZZLE_LEVEL=error
      - DOZZLE_FILTER="label=dozzle" # limits logging to containers with this label
      - DOZZLE_TAILSIZE=300
      - DOZZLE_ENABLE_ACTIONS=true
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  # Notifiarr - update ARR profiles
  notifiarr:
    image: golift/notifiarr:latest
    container_name: notifiarr
    hostname: notifiarr #must be set for this container, can by anything
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 5454:5454
    environment:
      - TZ=${TZ}
      - DN_API_KEY=${NOTIFIARR}
      - USER=docker
    volumes:
      - ${APPDIR}/notifiarr:/config
    labels:
      ## Log viewer
      # - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}

  ############################# SECURITY/PASSWORD MANAGEMENT
  # Vaultwarden - Locally-hosted Bitwarden
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    networks:
      lsio:
    ports:
      - 8269:8269
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ROCKET_PORT=8269
      - PUSH_ENABLED=true
      - PUSH_INSTALLATION_ID=${PUSH_INSTALLATION_ID}
      - PUSH_INSTALLATION_KEY=${PUSH_INSTALLATION_KEY}
      - LOG_LEVEL=error
      - EXTENDED_LOGGING=false
    volumes:
      - ${APPDIR}/vaultwarden:/data
    labels:
      ## Log viewer
      - dozzle
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=${DISCORD}
      - org.hotio.pullio.generic.webhook=${PULLIO}
